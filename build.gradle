//buildscript {
//    repositories {
//        jcenter()
//    }
//    dependencies {
//        classpath "io.qameta.allure:allure-gradle:2.3"
//    }
//}

plugins {
    id 'io.qameta.allure' version '2.3'
}

plugins {
    id 'java-library'
    id 'java'
}

apply plugin: 'io.qameta.allure'

allure {
    version = '2.2.1'
    autoconfigure = true
    aspectjweaver = true
    resultsDir = file("$projectDir/allure-jsons")
    reportDir = file('$projectDir/allure-report')

    useTestNG() {
        version = '2.2.1'
    }
}

group 'io.houze'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
//     https://mvnrepository.com/artifact/org.testng/testng
    compile group: 'org.testng', name: 'testng', version: '6.14.3'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'

    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-support
    compile group: 'org.seleniumhq.selenium', name: 'selenium-support', version: '3.141.59'

    // https://mvnrepository.com/artifact/io.github.bonigarcia/webdrivermanager
    compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '4.0.0'

    // https://mvnrepository.com/artifact/org.uncommons/reportng
    compile group: 'org.uncommons', name: 'reportng', version: '1.1.4'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.4'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.4'

    // https://mvnrepository.com/artifact/com.aventstack/extentreports
    compile group: 'com.relevantcodes', name: 'extentreports', version: '2.41.2'

    // https://mvnrepository.com/artifact/joda-time/joda-time
    compile group: 'joda-time', name: 'joda-time', version: '2.0'

    // https://mvnrepository.com/artifact/log4j/log4j
//    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.24'

    // https://mvnrepository.com/artifact/velocity/velocity-dep
    compile group: 'velocity', name: 'velocity-dep', version: '1.4'

    // https://mvnrepository.com/artifact/com.codeborne/phantomjsdriver
    compile group: 'com.codeborne', name: 'phantomjsdriver', version: '1.4.4'

    // https://mvnrepository.com/artifact/com.google.inject/guice
    compile group: 'com.google.inject', name: 'guice', version: '4.1.0'

    // https://mvnrepository.com/artifact/commons-logging/commons-logging
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'

    // https://mvnrepository.com/artifact/com.github.javafaker/javafaker
    compile group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'

    // https://mvnrepository.com/artifact/io.appium/java-client/
    compile group: 'io.appium', name: 'java-client', version: '7.3.0'

    compile group: 'io.qameta.allure', name: 'allure-gradle', version: '2.8.1'
    compile group: 'io.qameta.allure', name: 'allure-testng', version: '2.13.7'

    runtime group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.6'

}


compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

test {
    useTestNG() {
        suites 'src/test/resources/runTraining.xml'
        outputDirectory = file("$projectDir/report-output")
    }

    testLogging {
        showStandardStreams = true
    }

    reports.html.setDestination(file("$projectDir/gradle-output"))
}

task deleteReport(type: Delete) {
    delete 'allure-jsons'
}

task testInvest(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        useDefaultListeners = false
        suites 'src/test/resources/test_invest.xml'
    }
}

task testRegister(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        useDefaultListeners = false
        suites 'src/test/resources/test_register.xml'
    }
}

task testEKYC(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        useDefaultListeners = false
        suites 'src/test/resources/test_ekyc.xml'
    }
}

task testWalletCreateBank(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        useDefaultListeners = false
        suites 'src/test/resources/test_wallet_01_create_bank.xml'
    }
}

task testWalletDeleteBank(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        useDefaultListeners = false
        suites 'src/test/resources/test_wallet_02_delete_bank.xml'
    }
}

task testWallet(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
//        useDefaultListeners = false
        suites 'src/test/resources/test_wallet.xml'
    }
}

task testDeposit(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        suites 'src/test/resources/test_wallet_03_deposit.xml'
    }
}

task testWithdraw(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        useDefaultListeners = false
        suites 'src/test/resources/test_wallet_04_withdraw.xml'
    }
}

task testUpdateProfile(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        useDefaultListeners = false
        suites 'src/test/resources/test_profile_02_update.xml'
    }
}

task testChangePw(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        useDefaultListeners = false
        suites 'src/test/resources/test_profile_03_change_pw.xml'
    }
}

task testTradingBuy(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        useDefaultListeners = false
        suites 'src/test/resources/test_trading_01_post_buy.xml'
    }
}

task testTradingSell(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        useDefaultListeners = false
        suites 'src/test/resources/test_trading_02_post_sell.xml'
    }
}

task testParallel(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        useDefaultListeners = false
        suites 'src/test/resources/test_wallet_parallel.xml'
    }
}

task testRegression(type: Test, dependsOn: 'deleteReport') {
    useTestNG() {
        useDefaultListeners = false
        suites 'src/test/resources/test_regression.xml'
    }
}